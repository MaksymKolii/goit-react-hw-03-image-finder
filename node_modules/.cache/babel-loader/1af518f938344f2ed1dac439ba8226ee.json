{"ast":null,"code":"var _jsxFileName = \"E:\\\\GOIT_Course\\\\REACT\\\\goit-react-hw-03-image-finder\\\\src\\\\components\\\\App.jsx\";\nimport React, { Component } from 'react';\nimport { GlobalStyle } from './utils/GlobalStyles';\nimport { APP } from './App.styled';\nimport { fetchImages } from 'services/apiFetcher';\nimport { Searchbar } from './Searchbar/Searchbar';\nimport { imagesMapper } from '../services/imageMapper';\nimport { ImagesGallery } from './ImageGallery/ImageGallery';\nimport { Loader } from './Loader/Loader';\nimport { LButton } from './Button/Button.styled'; // import Modal from './Modal/Modal';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      images: [],\n      currentImage: null,\n      isShown: false,\n      page: 13,\n      query: null,\n      isLoading: false,\n      totPages: null,\n      eror: null\n    };\n\n    this.getImages = async () => {\n      const {\n        page,\n        query\n      } = this.state;\n      this.setState({\n        isLoading: true\n      });\n\n      try {\n        const array = await fetchImages(query, page);\n\n        if (!array.hits.length) {\n          alert('Sorry, there are no images matching your search query. Please try again.');\n        }\n\n        this.setState({\n          totPages: Math.floor(array.totalHits / 12)\n        });\n        console.log(array);\n        console.log(array.totalHits);\n        this.setState(prev => ({\n          images: [...prev.images, ...imagesMapper(array.hits)]\n        }));\n        this.setState({\n          isLoading: false\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    this.nextPage = () => {\n      this.setState(_ref => {\n        let {\n          page\n        } = _ref;\n        return {\n          page: page + 1\n        };\n      });\n\n      if (this.state.page === this.state.totPages) {\n        // if (page === totalPages && images !== prev.images) {\n        alert(\"We're sorry, but you've reached the end of search results.\");\n      }\n    };\n\n    this.onFormSubmit = query => {\n      this.setState({\n        query,\n        page: 1,\n        images: []\n      });\n    };\n  }\n\n  componentDidUpdate(_, prev) {\n    const {\n      page,\n      totalPages,\n      images,\n      query\n    } = this.state;\n\n    if (prev.page !== page || prev.query !== query) {\n      this.getImages();\n    }\n\n    if (page === totalPages) {\n      // if (page === totalPages && images !== prev.images) {\n      alert(\"We're sorry, but you've reached the end of search results.\");\n    }\n  }\n\n  render() {\n    const {\n      images,\n      isLoading,\n      page,\n      totPages\n    } = this.state; // console.log(currentImage);\n    // console.log(images);\n\n    return /*#__PURE__*/_jsxDEV(APP, {\n      children: [/*#__PURE__*/_jsxDEV(Searchbar, {\n        onSubmit: this.onFormSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), images && /*#__PURE__*/_jsxDEV(ImagesGallery, {\n        options: images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 20\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this) : images && page < totPages && /*#__PURE__*/_jsxDEV(LButton, {\n        onClick: this.nextPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 40\n      }, this), /*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["E:/GOIT_Course/REACT/goit-react-hw-03-image-finder/src/components/App.jsx"],"names":["React","Component","GlobalStyle","APP","fetchImages","Searchbar","imagesMapper","ImagesGallery","Loader","LButton","App","state","images","currentImage","isShown","page","query","isLoading","totPages","eror","getImages","setState","array","hits","length","alert","Math","floor","totalHits","console","log","prev","error","nextPage","onFormSubmit","componentDidUpdate","_","totalPages","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { GlobalStyle } from './utils/GlobalStyles';\r\nimport { APP } from './App.styled';\r\n\r\nimport { fetchImages } from 'services/apiFetcher';\r\nimport { Searchbar } from './Searchbar/Searchbar';\r\nimport { imagesMapper } from '../services/imageMapper';\r\nimport { ImagesGallery } from './ImageGallery/ImageGallery';\r\nimport { Loader } from './Loader/Loader';\r\nimport { LButton } from './Button/Button.styled';\r\n// import Modal from './Modal/Modal';\r\n\r\nexport class App extends Component {\r\n  state = {\r\n    images: [],\r\n    currentImage: null,\r\n    isShown: false,\r\n    page: 13,\r\n    query: null,\r\n    isLoading: false,\r\n    totPages: null,\r\n    eror: null,\r\n  };\r\n\r\n  componentDidUpdate(_, prev) {\r\n    const { page, totalPages, images, query } = this.state;\r\n\r\n    if (prev.page !== page || prev.query !== query) {\r\n      this.getImages();\r\n    }\r\n    if (page === totalPages) {\r\n      // if (page === totalPages && images !== prev.images) {\r\n      alert(\"We're sorry, but you've reached the end of search results.\");\r\n    }\r\n  }\r\n\r\n  getImages = async () => {\r\n    const { page, query } = this.state;\r\n    this.setState({ isLoading: true });\r\n    try {\r\n      const array = await fetchImages(query, page);\r\n\r\n      if (!array.hits.length) {\r\n        alert(\r\n          'Sorry, there are no images matching your search query. Please try again.'\r\n        );\r\n      }\r\n      this.setState({ totPages: Math.floor(array.totalHits / 12) });\r\n\r\n      console.log(array);\r\n      console.log(array.totalHits);\r\n      this.setState(prev => ({\r\n        images: [...prev.images, ...imagesMapper(array.hits)],\r\n      }));\r\n      this.setState({ isLoading: false });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  nextPage = () => {\r\n    this.setState(({ page }) => ({\r\n      page: page + 1,\r\n    }));\r\n    if (this.state.page === this.state.totPages) {\r\n      // if (page === totalPages && images !== prev.images) {\r\n      alert(\"We're sorry, but you've reached the end of search results.\");\r\n    }\r\n  };\r\n\r\n  // showImages = data => {\r\n  //   this.setState(({ isShown }) => ({\r\n  //     isShown: !isShown,\r\n  //     query: data,\r\n  //     inages: [],\r\n  //     page: 1,\r\n  //   }));\r\n  // };\r\n\r\n  // openModal = data => {\r\n  //   this.setState({ currentImage: data });\r\n  // };\r\n\r\n  // closeModal = () => {\r\n  //   this.setState({ currentImage: null });\r\n  // };\r\n  // handleFormSubmit = query => {\r\n  //   this.setState({ query });\r\n  // };\r\n\r\n  onFormSubmit = query => {\r\n    this.setState({\r\n      query,\r\n      page: 1,\r\n      images: [],\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { images, isLoading, page, totPages } = this.state;\r\n    // console.log(currentImage);\r\n    // console.log(images);\r\n\r\n    return (\r\n      <APP>\r\n        <Searchbar onSubmit={this.onFormSubmit}></Searchbar>\r\n        {images && <ImagesGallery options={images} />}\r\n\r\n        {isLoading ? (\r\n          <Loader />\r\n        ) : (\r\n          images && page < totPages && <LButton onClick={this.nextPage} />\r\n        )}\r\n        {/* <ImagesGallery options={images}></ImagesGallery> */}\r\n        {/* <button type=\"button\" onClick={this.toggleModal}>\r\n          Open Modal\r\n        </button> */}\r\n\r\n        {/* {showModal && (\r\n          <Modal onClose={this.toggleModal}>\r\n            <button type=\"button\" onClick={this.toggleModal}>\r\n              Close modal\r\n            </button>\r\n          </Modal>\r\n        )} */}\r\n\r\n        <GlobalStyle />\r\n      </APP>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"E:\\\\GOIT_Course\\\\REACT\\\\goit-react-hw-03-image-finder\\\\src\\\\components\\\\App.jsx\";\nimport React, { Component } from 'react'; // import { GlobalStyle } from './utils/GlobalStyles';\n// import s from './appCSS/App.module.css';\n\nimport { fetchImages } from 'services/apiFetcher';\nimport { Searchbar } from './Searchbar/Searchbar';\nimport { imagesMapper } from '../services/imageMapper';\nimport { ImagesGallery } from './ImageGallery/ImageGallery'; // import { Loader } from './Loader/Loader';\n// import Modal from './Modal/Modal';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      images: [],\n      currentImage: null,\n      isShown: false,\n      page: 1,\n      query: null,\n      isLoading: false,\n      eror: null\n    };\n\n    this.getImages = async () => {\n      const {\n        page,\n        query\n      } = this.state;\n      this.setState({\n        isLoading: true\n      });\n\n      try {\n        const array = await fetchImages(query, page);\n\n        if (!array.length) {\n          alert('Sorry, there are no images matching your search query. Please try again.');\n        }\n\n        console.log(array);\n        this.setState(prev => ({\n          images: [...prev.images, ...imagesMapper(array)]\n        }));\n        this.setState({\n          isLoading: false\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    this.onFormSubmit = query => {\n      // if (query.trim().length === 0) {\n      //   alert('Please, enter Something !!!');\n      //   return;\n      // }\n      this.setState({\n        query,\n        page: 1,\n        images: []\n      });\n    };\n  }\n\n  componentDidUpdate(_, prev) {\n    const {\n      page,\n      totalPages,\n      images,\n      query\n    } = this.state;\n\n    if (prev.page !== page || prev.query !== query) {\n      this.getImages();\n    } // if (page === prev.page && images === prev.images) {\n    //   alert(\"We're sorry, but you've reached the end of search results.\");\n    // }\n\n  }\n\n  render() {\n    const {\n      images,\n      query\n    } = this.state; // console.log(currentImage);\n    // console.log(images);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"77\",\n      children: [/*#__PURE__*/_jsxDEV(Searchbar, {\n        onSubmit: this.onFormSubmit // query={query}\n        // handleInputChange={this.handleInputChange}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImagesGallery, {\n        options: images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["E:/GOIT_Course/REACT/goit-react-hw-03-image-finder/src/components/App.jsx"],"names":["React","Component","fetchImages","Searchbar","imagesMapper","ImagesGallery","App","state","images","currentImage","isShown","page","query","isLoading","eror","getImages","setState","array","length","alert","console","log","prev","error","onFormSubmit","componentDidUpdate","_","totalPages","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;AACA;;AAEA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,SAAT,QAA0B,uBAA1B;AACA,SAASC,YAAT,QAA6B,yBAA7B;AACA,SAASC,aAAT,QAA8B,6BAA9B,C,CACA;AACA;;;AAEA,OAAO,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAAA;AAAA;AAAA,SACjCM,KADiC,GACzB;AACNC,MAAAA,MAAM,EAAE,EADF;AAENC,MAAAA,YAAY,EAAE,IAFR;AAGNC,MAAAA,OAAO,EAAE,KAHH;AAINC,MAAAA,IAAI,EAAE,CAJA;AAKNC,MAAAA,KAAK,EAAE,IALD;AAMNC,MAAAA,SAAS,EAAE,KANL;AAONC,MAAAA,IAAI,EAAE;AAPA,KADyB;;AAAA,SAuBjCC,SAvBiC,GAuBrB,YAAY;AACtB,YAAM;AAAEJ,QAAAA,IAAF;AAAQC,QAAAA;AAAR,UAAkB,KAAKL,KAA7B;AACA,WAAKS,QAAL,CAAc;AAAEH,QAAAA,SAAS,EAAE;AAAb,OAAd;;AACA,UAAI;AACF,cAAMI,KAAK,GAAG,MAAMf,WAAW,CAACU,KAAD,EAAQD,IAAR,CAA/B;;AACA,YAAI,CAACM,KAAK,CAACC,MAAX,EAAmB;AACjBC,UAAAA,KAAK,CACH,0EADG,CAAL;AAGD;;AAEDC,QAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AAEA,aAAKD,QAAL,CAAcM,IAAI,KAAK;AACrBd,UAAAA,MAAM,EAAE,CAAC,GAAGc,IAAI,CAACd,MAAT,EAAiB,GAAGJ,YAAY,CAACa,KAAD,CAAhC;AADa,SAAL,CAAlB;AAGA,aAAKD,QAAL,CAAc;AAAEH,UAAAA,SAAS,EAAE;AAAb,SAAd;AACD,OAdD,CAcE,OAAOU,KAAP,EAAc;AACdH,QAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACD;AACF,KA3CgC;;AAAA,SAiEjCC,YAjEiC,GAiElBZ,KAAK,IAAI;AACtB;AACA;AACA;AACA;AAEA,WAAKI,QAAL,CAAc;AACZJ,QAAAA,KADY;AAEZD,QAAAA,IAAI,EAAE,CAFM;AAGZH,QAAAA,MAAM,EAAE;AAHI,OAAd;AAKD,KA5EgC;AAAA;;AAWjCiB,EAAAA,kBAAkB,CAACC,CAAD,EAAIJ,IAAJ,EAAU;AAC1B,UAAM;AAAEX,MAAAA,IAAF;AAAQgB,MAAAA,UAAR;AAAoBnB,MAAAA,MAApB;AAA4BI,MAAAA;AAA5B,QAAsC,KAAKL,KAAjD;;AAEA,QAAIe,IAAI,CAACX,IAAL,KAAcA,IAAd,IAAsBW,IAAI,CAACV,KAAL,KAAeA,KAAzC,EAAgD;AAC9C,WAAKG,SAAL;AACD,KALyB,CAO1B;AACA;AACA;;AACD;;AAyDDa,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEpB,MAAAA,MAAF;AAAUI,MAAAA;AAAV,QAAoB,KAAKL,KAA/B,CADO,CAEP;AACA;;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,IAAf;AAAA,8BACE,QAAC,SAAD;AACE,QAAA,QAAQ,EAAE,KAAKiB,YADjB,CAEE;AACA;;AAHF;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,aAAD;AAAe,QAAA,OAAO,EAAEhB;AAAxB;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAuBD;;AA1GgC","sourcesContent":["import React, { Component } from 'react';\r\n// import { GlobalStyle } from './utils/GlobalStyles';\r\n// import s from './appCSS/App.module.css';\r\n\r\nimport { fetchImages } from 'services/apiFetcher';\r\nimport { Searchbar } from './Searchbar/Searchbar';\r\nimport { imagesMapper } from '../services/imageMapper';\r\nimport { ImagesGallery } from './ImageGallery/ImageGallery';\r\n// import { Loader } from './Loader/Loader';\r\n// import Modal from './Modal/Modal';\r\n\r\nexport class App extends Component {\r\n  state = {\r\n    images: [],\r\n    currentImage: null,\r\n    isShown: false,\r\n    page: 1,\r\n    query: null,\r\n    isLoading: false,\r\n    eror: null,\r\n  };\r\n\r\n  componentDidUpdate(_, prev) {\r\n    const { page, totalPages, images, query } = this.state;\r\n\r\n    if (prev.page !== page || prev.query !== query) {\r\n      this.getImages();\r\n    }\r\n\r\n    // if (page === prev.page && images === prev.images) {\r\n    //   alert(\"We're sorry, but you've reached the end of search results.\");\r\n    // }\r\n  }\r\n\r\n  getImages = async () => {\r\n    const { page, query } = this.state;\r\n    this.setState({ isLoading: true });\r\n    try {\r\n      const array = await fetchImages(query, page);\r\n      if (!array.length) {\r\n        alert(\r\n          'Sorry, there are no images matching your search query. Please try again.'\r\n        );\r\n      }\r\n\r\n      console.log(array);\r\n\r\n      this.setState(prev => ({\r\n        images: [...prev.images, ...imagesMapper(array)],\r\n      }));\r\n      this.setState({ isLoading: false });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  // showImages = data => {\r\n  //   this.setState(({ isShown }) => ({\r\n  //     isShown: !isShown,\r\n  //     query: data,\r\n  //     inages: [],\r\n  //     page: 1,\r\n  //   }));\r\n  // };\r\n\r\n  // openModal = data => {\r\n  //   this.setState({ currentImage: data });\r\n  // };\r\n\r\n  // closeModal = () => {\r\n  //   this.setState({ currentImage: null });\r\n  // };\r\n  // handleFormSubmit = query => {\r\n  //   this.setState({ query });\r\n  // };\r\n\r\n  onFormSubmit = query => {\r\n    // if (query.trim().length === 0) {\r\n    //   alert('Please, enter Something !!!');\r\n    //   return;\r\n    // }\r\n\r\n    this.setState({\r\n      query,\r\n      page: 1,\r\n      images: [],\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { images, query } = this.state;\r\n    // console.log(currentImage);\r\n    // console.log(images);\r\n\r\n    return (\r\n      <div className=\"77\">\r\n        <Searchbar\r\n          onSubmit={this.onFormSubmit}\r\n          // query={query}\r\n          // handleInputChange={this.handleInputChange}\r\n        ></Searchbar>\r\n        <ImagesGallery options={images}></ImagesGallery>\r\n        {/* <button type=\"button\" onClick={this.toggleModal}>\r\n          Open Modal\r\n        </button> */}\r\n\r\n        {/* {showModal && (\r\n          <Modal onClose={this.toggleModal}>\r\n            <button type=\"button\" onClick={this.toggleModal}>\r\n              Close modal\r\n            </button>\r\n          </Modal>\r\n        )} */}\r\n\r\n        {/* <GlobalStyle /> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}